
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import hashlib

# NIST parameters
g = 2
p = int(
    "241031242692103258855207602219756607485695054850245994265411694195810883168261222889"
    "009385826134161467322714147790401219650364895705058263194273070680500922306273474534"
    "107340669624601458936165977404102716924945320037872943417032584377865919814376319377"
    "685986952408894019557734611984354530154704374720774996976375008430892633929555996888"
    "245787241299381012913029459299994792636526405928464720973038494721168143446471443848"
    "8520940127459844288859336526896320919633919"
)

# Alice's public value
A = int(
    "112218739139542908880564359534373424013016249772931962692237907571990334483528877513"
    "809272625610512061159061737608547288558662879685086684299624481742865016924065000555"
    "267977830144740364467977206555914781236397216033805882207640219686011643468275165718"
    "132888489024688846101943642459655423609111976363316080620471928236879737944217503462"
    "265615774774318986375878440978819238346077908864116156831874695817477772477121232820"
    "827728424890845769152726027520772901423784"
)

# Your private secret b and your public value B 
b = int(
    "197395083814907028991785772714920885908249341925650951555219049411298436217190605190"
    "824934787336279228785809783531814507661385111220639329358048196339626065676869119737"
    "979175531770768861808581110311903548567424039264485661330995221907803300824165469977"
    "099494284722831845653985392791480264712091293580274947132480402319812110462641143884"
    "577706335859190668240694680261160210609506891842793868297672619625924001403035676872"
    "189455767944077542198064499486164431451944"
)
B = int(
    "124197246052207534478333755666070053776033110833273567786386281366657863951889929322"
    "639992125204965503156361290539514523685444333477455598220485789571638321570549897039"
    "537952669876146893214720065051362602826344960575566118952552134314297926504406840940"
    "566754924112559738717300646014537975998627219199067598887389420895685177333103974784"
    "031245522135458991072698281920342199272973829645282036555375918254725599898488215839"
    "3688119629609067647494762616719047466973581"
)

# Compute the shared secret: s = A^b mod p
shared_secret = pow(A, b, p)

# Derive a 128-bit AES key via SHA‚Äê1 (truncate to 16 bytes)
sha1 = hashlib.sha1()
sha1.update(str(shared_secret).encode('ascii'))
key = sha1.digest()[:16]


iv_hex = "737561146ff8194f45290f5766ed6aba"
cipher_hex = "39c99bf2f0c14678d6a5416faef954b5893c316fc3c48622ba1fd6a9fe85f3dc72a29c394cf4bc8aff6a7b21cae8e12c"

iv = bytes.fromhex(iv_hex)
ciphertext = bytes.fromhex(cipher_hex)

cipher = AES.new(key, AES.MODE_CBC, iv)
plaintext_padded = cipher.decrypt(ciphertext)
try:
    plaintext = unpad(plaintext_padded, AES.block_size)
except ValueError:
    plaintext = plaintext_padded

print(plaintext.decode('ascii'))
